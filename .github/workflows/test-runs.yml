---
name: Loimos Test Runs

# Controls when the action will run. Triggers the workflow on push or pull
# request events but only for the develop branch

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

env:
  ACTIONS_RUNNER_DEBUG: true


# A workflow run is made up of one or more jobs that can run sequentially or in
# parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the
    # job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can
      # access it
      - name: Build and Test Loimos
        uses: actions/checkout@v4

      - name: Cache Charm++
        id: cache-charm
        uses: actions/cache@v3
        with:
          path: |
            ~/charm
          key: ${{ runner.os }}-charm-v7.0.0

      - name: build-charm
        if: ${{ steps.cache-charm.outputs.cache-hit != 'true' }}
        run: |
          git clone https://github.com/UIUC-PPL/charm.git charm
          cd charm
          git checkout v7.0.0
          ./build charm++ netlrts-linux-x86_64 -g -j --with-production \
          --enable-error-checking
          ./build charm++ netlrts-linux-x86_64 smp -g -j --with-production \
          --enable-error-checking

      - name: Cache Protobuf
        id: cache-protobuf
        uses: actions/cache@v3
        with:
          path: |
            ~/protobuf
          key: ${{ runner.os }}-protobuf-v3.15.0

      - name: build-protobuf
        if: ${{ steps.cache-protobuf.outputs.cache-hit != 'true' }}
        run: |
          git clone https://github.com/protocolbuffers/protobuf.git
          cd protobuf
          git checkout v3.15.0
          ./autogen.sh
          mkdir build install
          cd build
          ../configure --prefix="$GITHUB_WORKSPACE/protobuf/install"
          make -j4 && make install

#    # Build googletest
#    - name: build-gtest
#      run: |
#        git clone https://github.com/google/googletest.git
#        cd googletest
#        mkdir build install
#        cd build
#        export CMAKE_INSTALL_LIBDIR=$GITHUB_WORKSPACE/googletest/install
#        cmake ..
#        make -j4
#        make install

      - name: Install Submodules
        id: build-submodules
        run: |
          git submodule init
          git submodule update
          
      - name: Build and Test Debug Version
        id: test-debug-loimos
        run: |
          export PROTOBUF_HOME=$GITHUB_WORKSPACE/protobuf/install
          export GTEST_HOME=$GITHUB_WORKSPACE/googletest/install/cmake
          export LD_LIBRARY_PATH=$PROTOBUF_HOME/lib:$LD_LIBRARY_PATH
          export PATH_PROTOBUF=$PROTOBUF_HOME/bin:$PATH
          export CHARM_HOME=$GITHUB_WORKSPACE/charm/netlrts-linux-x86_64
          export PATH=$CHARM_HOME/bin:$PATH_PROTOBUF
          export ENABLE_FORCE_FULL_RUN=1
          cd src
          # Make debug version of Loimos
          ENABLE_DEBUG=2 make
          mv loimos loimos-debug
          ./charmrun +p4 ./loimos-debug 1 100 100 50 50 5 5 5 32 7 \
            ci-test-non-smp.csv \
            ../data/disease_models/covid19_onepath.textproto \
            +setcpuaffinity ++local
      
      - name: Build and Test Detailed Outputs
        id: test-out-loimos
        run: |
          export PROTOBUF_HOME=$GITHUB_WORKSPACE/protobuf/install
          export GTEST_HOME=$GITHUB_WORKSPACE/googletest/install/cmake
          export LD_LIBRARY_PATH=$PROTOBUF_HOME/lib:$LD_LIBRARY_PATH
          export PATH_PROTOBUF=$PROTOBUF_HOME/bin:$PATH
          export CHARM_HOME=$GITHUB_WORKSPACE/charm/netlrts-linux-x86_64
          export PATH=$CHARM_HOME/bin:$PATH_PROTOBUF
          export ENABLE_FORCE_FULL_RUN=1
          cd src
          make clean
          # Make detailed output version of Loimos
          OUTPUT_FLAGS=7 make
          mv loimos loimos-out
          ./charmrun +p4 ./loimos-out 0 2 2 30 7 \
            ci_test_out \
            ../data/disease_models/covid19_onepath.textproto \
            ../data/populations/synthetic_small_city \
            +setcpuaffinity ++local
          ls
          ls ci_test_out
          cd ci_test_out
          ls {exposures,interactions,transitions}_chare_{0,1}.csv summary.csv

      - name: Build and Test Non-SMP Version
        id: test-non-smp
        run: |
          export PROTOBUF_HOME=$GITHUB_WORKSPACE/protobuf/install
          export GTEST_HOME=$GITHUB_WORKSPACE/googletest/install/cmake
          export LD_LIBRARY_PATH=$PROTOBUF_HOME/lib:$LD_LIBRARY_PATH
          export PATH_PROTOBUF=$PROTOBUF_HOME/bin:$PATH
          export CHARM_HOME=$GITHUB_WORKSPACE/charm/netlrts-linux-x86_64
          export PATH=$CHARM_HOME/bin:$PATH_PROTOBUF
          export ENABLE_FORCE_FULL_RUN=1
          cd src
          make clean
          # Build non-smp version
          make
          ./charmrun +p4 ./loimos 1 100 100 50 50 5 5 5 32 7 \
            ci-test-non-smp.csv \
            ../data/disease_models/covid19_onepath.textproto \
            +setcpuaffinity ++local

      - name: Build and Test SMP Version
        id: test-smp
        run: |
          export PROTOBUF_HOME=$GITHUB_WORKSPACE/protobuf/install
          export GTEST_HOME=$GITHUB_WORKSPACE/googletest/install/cmake
          export LD_LIBRARY_PATH=$PROTOBUF_HOME/lib:$LD_LIBRARY_PATH
          export PATH_PROTOBUF=$PROTOBUF_HOME/bin:$PATH
          export CHARM_HOME=$GITHUB_WORKSPACE/charm/netlrts-linux-x86_64
          export PATH=$CHARM_HOME/bin:$PATH_PROTOBUF
          export ENABLE_FORCE_FULL_RUN=1
          cd src
          # Build smp version
          ENABLE_SMP=1 make clean
          ENABLE_SMP=1 make
          ./charmrun +p4 ./loimos-smp 1 100 100 50 50 5 5 5 32 7 \
            ci-test-smp.csv ../data/disease_models/covid19_onepath.textproto \
            +setcpuaffinity ++local
      
      - name: Build and Test Optimizations
        id: test-opts
        run: |
          export PROTOBUF_HOME=$GITHUB_WORKSPACE/protobuf/install
          export GTEST_HOME=$GITHUB_WORKSPACE/googletest/install/cmake
          export LD_LIBRARY_PATH=$PROTOBUF_HOME/lib:$LD_LIBRARY_PATH
          export PATH_PROTOBUF=$PROTOBUF_HOME/bin:$PATH
          export CHARM_HOME=$GITHUB_WORKSPACE/charm/netlrts-linux-x86_64
          export PATH=$CHARM_HOME/bin:$PATH_PROTOBUF
          export ENABLE_FORCE_FULL_RUN=1
          cd src
          # Build optimized verison
          ENABLE_AGGREGATION=1 ENABLE_SC=1 make clean
          ENABLE_AGGREGATION=1 ENABLE_SC=1 make
          ./charmrun +p4 ./loimos-agg-sc 1 100 100 50 50 5 5 5 32 7 \
            ci-test-opts.csv \
            ../data/disease_models/covid19_onepath.textproto \
            +setcpuaffinity ++local

      # Make sure small Utopia dataset has the right number of interactions
      - name: Test Interaction Counting (on Utopia Dataset)
        id: test-utopia
        run: |
          export PROTOBUF_HOME=$GITHUB_WORKSPACE/protobuf/install
          export GTEST_HOME=$GITHUB_WORKSPACE/googletest/install/cmake
          export LD_LIBRARY_PATH=$PROTOBUF_HOME/lib:$LD_LIBRARY_PATH
          export PATH_PROTOBUF=$PROTOBUF_HOME/bin:$PATH
          export CHARM_HOME=$GITHUB_WORKSPACE/charm/netlrts-linux-x86_64
          export PATH=$CHARM_HOME/bin:$PATH_PROTOBUF
          cd src
          ./charmrun +p4 ./loimos-debug 0 2 2 1 1 test-utopia.csv \
            ../data/disease_models/covid19.textproto \
            ../data/populations/utopia/ --min-max-alpha ++local > utopia.out
          grep -r "97 interactions" utopia.out

      # Make sure safe/risky visit schedule behaves as expected, with all the
      # risky people getting infected and only those intially seeded amongst
      # the safe people
      - name: Test Safe-Risky Population
        id: test-safe-risky
        run: |
          export PROTOBUF_HOME=$GITHUB_WORKSPACE/protobuf/install
          export GTEST_HOME=$GITHUB_WORKSPACE/googletest/install/cmake
          export LD_LIBRARY_PATH=$PROTOBUF_HOME/lib:$LD_LIBRARY_PATH
          export PATH_PROTOBUF=$PROTOBUF_HOME/bin:$PATH
          export CHARM_HOME=$GITHUB_WORKSPACE/charm/netlrts-linux-x86_64
          export PATH=$CHARM_HOME/bin:$PATH_PROTOBUF
          cd src
          ./charmrun +p4 ./loimos 0 60 40 30 1 \
            test-safe-risky.csv \
            ../data/disease_models/safe_risky.textproto \
            ../data/populations/safe_risky_population/ ++local
          cat test-safe-risky.csv
          grep -r "29,recovered_safe,7,0" test-safe-risky.csv
          grep -r "29,recovered_risky,20000,0" test-safe-risky.csv

      # Make sure epi-curve matches previous one for a synthetic dataset
      - name: Test Epicurve on Synthetic Population
        id: test-regression-synthetic
        run: |
          export PROTOBUF_HOME=$GITHUB_WORKSPACE/protobuf/install
          export GTEST_HOME=$GITHUB_WORKSPACE/googletest/install/cmake
          export LD_LIBRARY_PATH=$PROTOBUF_HOME/lib:$LD_LIBRARY_PATH
          export PATH_PROTOBUF=$PROTOBUF_HOME/bin:$PATH
          export CHARM_HOME=$GITHUB_WORKSPACE/charm/netlrts-linux-x86_64
          export PATH=$CHARM_HOME/bin:$PATH_PROTOBUF
          cd src
          ./charmrun +p4 ./loimos 1 100 100 50 50 5 5 5 32 30 test-syn.csv \
            ../data/disease_models/covid19_onepath.textproto ++local
          cat test-syn.csv
          diff test-syn.csv ../data/validation/test-syn.csv
      
      # Make sure epi-curve doesn't change when we introduce optimizations
      - name: Test Epicurve on Synthetic Population With Optimizations
        id: test-regression-synthetic-opts
        run: |
          export PROTOBUF_HOME=$GITHUB_WORKSPACE/protobuf/install
          export GTEST_HOME=$GITHUB_WORKSPACE/googletest/install/cmake
          export LD_LIBRARY_PATH=$PROTOBUF_HOME/lib:$LD_LIBRARY_PATH
          export PATH_PROTOBUF=$PROTOBUF_HOME/bin:$PATH
          export CHARM_HOME=$GITHUB_WORKSPACE/charm/netlrts-linux-x86_64
          export PATH=$CHARM_HOME/bin:$PATH_PROTOBUF
          cd src
          ./charmrun +p4 ./loimos-agg-sc 1 100 100 50 50 5 5 5 32 30 test-syn-opts.csv \
            ../data/disease_models/covid19_onepath.textproto ++local
          cat test-syn-opts.csv
          diff test-syn-opts.csv ../data/validation/test-syn.csv

